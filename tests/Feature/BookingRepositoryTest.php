<?php

namespace Tests\Feature;

use App\Models\Room;
use App\Repositories\BookingRepository\BookingRepository;
use App\Repositories\RoomRepository\RoomRepository;
use Carbon\Carbon;
use Database\Seeders\ExampleSeeder;
use Database\Seeders\RoomSeeder;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Factories\Sequence;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class BookingRepositoryTest extends TestCase
{
    use RefreshDatabase;
    protected Collection $rooms;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->seed(ExampleSeeder::class);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_calculate_total_occupancy()
    {
        $startsAt   = Carbon::create(2023,01,2);
        $endsAt     = Carbon::create(2023,01,2);
        $totalOccupancy = (new BookingRepository())->getTotalOccupancy($startsAt, $endsAt);

        $this->assertEquals(4, $totalOccupancy);
    }

    public function test_calculate_total_occupancy_for_a_mount()
    {
        $startsAt   = Carbon::create(2023,01,1);
        $endsAt     = Carbon::create(2023,01,31);
        $totalOccupancy = (new BookingRepository())->getTotalOccupancy($startsAt, $endsAt);

        $this->assertEquals(26, $totalOccupancy);
    }

    public function test_calculate_total_occupancy_for_a_jan6()
    {
        $startsAt   = Carbon::create(2023,01,6);
        $endsAt     = Carbon::create(2023,01,6);
        $totalOccupancy = (new BookingRepository())->getTotalOccupancy($startsAt, $endsAt);

        $this->assertEquals(1, $totalOccupancy);
    }
}
